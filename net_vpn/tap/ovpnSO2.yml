---
#ovpnSO1.yml
- name: Setup openvpn client gateway  office2
  hosts: openvpnClientGatewayOffice2
  become: yes

  tasks: 
  
  - name: Add epel-release repo
    yum:
      name: epel-release
      state: present

  - name: Add tcpdump
    yum:
      name: tcpdump
      state: present
 
  - name: Add bridge-utils
    yum:
      name: bridge-utils
      state: present
  
  - name: Add net-tools
    yum:
      name: net-tools
      state: present
      
  - name: Add iperf3
    yum:
      name: iperf3
      state: present
        
  - name: Add wget
    yum:
      name: wget
      state: present
        
  - name: Add openvpn
    yum:
      name: openvpn
      state: present
        
  - name: Add iptables-services
    yum:
      name: iptables-services
      state: present
        
  - name: Enable iptables-service
    systemd:
      name: iptables.service
      enabled: true
      masked: no
        
  - name: daemon started
    systemd:
      name: iptables.service
      state: started
      enabled: yes
  
  #- name: Disable SELinux
  #ansible.posix.selinux:
      #state: disabled

  - name: Disable SELinux.
    selinux:
      policy: targeted
      state: disabled
    
#sudo setenforce 0
           
#sudo sed -i 's/=enforcing/=disabled/g' /etc/selinux/config
  
  
  
  - name: edit sysctl ip_forward
    sysctl:
      name: net.ipv4.ip_forward
      value: '1'
      sysctl_set: yes
      state: present
      reload: yes

  - name: Iptables flush filter
    ansible.builtin.iptables:
      chain: "{{ item }}"
      flush: yes
    with_items:  [ 'INPUT', 'FORWARD', 'OUTPUT' ]

  - name: Iptables flush nat
    ansible.builtin.iptables:
      table: nat
      chain: '{{ item }}'
      flush: yes
    with_items: [ 'INPUT', 'OUTPUT', 'PREROUTING', 'POSTROUTING' ]

  - name: Iptables flush mangle
    ansible.builtin.iptables:
      table: mangle
      chain: '{{ item }}'
      flush: yes
    with_items: [ 'INPUT', 'OUTPUT', 'PREROUTING', 'POSTROUTING' ]
     
  #- name: Save current state of the firewall in system file
    #ansible.builtin.command: service iptables save
 
  - name: Create directory
    file:
      path: /var/log/openvpn
      state: directory
      owner: root
      group: root
      mode: 0775
       
  - name: copy config
    template:
      src: /home/bdn/git/otus-linux/net_vpn/tap/client/client.conf
      dest: /etc/openvpn/client.conf
      owner: root
      group: root
      mode: 0775
      
  - name: copy config
    template:
      src: /home/bdn/git/otus-linux/net_vpn/tap/key/static.key
      dest: /etc/openvpn/static.key
      owner: root
      group: root
      mode: 0775

  - name: Enable openvpn
    systemd:
      name: openvpn@.client
      enabled: true
      masked: no
        
  - name: daemon started
    systemd:
      name: openvpn@.client
      state: started
      enabled: yes
           
      
  #- name: copy config
    #ansible.builtin.copy:
      #src: "{{ item }}"
      #dest: "/etc/openvpn/"
      #owner: "root"
      #mode: 0775
    #with_fileglob:
    #- "/home/bdn/git/otus-linux/net_vpn/certs/server/*"
      
      
      
      
      
      #template:
      #src: /home/bdn/git/otus-linux/net_vpn/certs/server
      #dest: /etc/openvpn
      #remote_src: yes
      #owner: root
      #group: root
      #mode: 0644
       
